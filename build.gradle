plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//thymeleaf layout 라이브러리
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	//spring-security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//타임리프에서 스프링시큐리티의 문법이나 형식을 지원하는 확장팩 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	//oauth2 로그인
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//Web Client
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//Bean Validation 사용
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//JPA, 스프링 데이터 JPA 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//서버 재시작없이 정적소스 변경
	implementation 'org.springframework.boot:spring-boot-devtools'

	//H2 데이터베이스 추가
//	runtimeOnly 'com.h2database:h2'

	//MySQL 데이터베이스 추가
//	runtimeOnly 'mysql:mysql-connector-java:8.0.32'
	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//spring-security test
	testImplementation 'org.springframework.security:spring-security-test'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}